{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { matchpassword } from './matchpassword.validator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction LogInComponent_p_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nfunction LogInComponent_p_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 10);\n    i0.ɵɵtext(1, \"Access granted!\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LogInComponent {\n  constructor(router) {\n    this.router = router;\n    this.errorMessage = \"Both User Name and Password must be present and be at least eight (8) characters long.\";\n    this.loginForm = new FormGroup({\n      username: new FormControl(null, [Validators.required, Validators.minLength(8)]),\n      password: new FormControl(null, [Validators.required, Validators.minLength(8)])\n    }, {\n      validators: matchpassword\n    });\n  }\n  login() {\n    console.log(this.loginForm.value);\n  }\n  onClick() {\n    this.router.navigate(['/home']);\n  }\n}\nLogInComponent.ɵfac = function LogInComponent_Factory(t) {\n  return new (t || LogInComponent)(i0.ɵɵdirectiveInject(i1.Router));\n};\nLogInComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LogInComponent,\n  selectors: [[\"ba-log-in\"]],\n  decls: 18,\n  vars: 4,\n  consts: [[1, \"belch\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"name\", \"userNameBanner\"], [\"type\", \"text\", \"name\", \"username\", \"id\", \"username\", \"formControlName\", \"username\"], [\"name\", \"passwordBanner\"], [\"type\", \"password\", \"name\", \"password\", \"id\", \"password\", \"formControlName\", \"password\"], [\"name\", \"submitLogIn\", 3, \"disabled\", \"click\"], [\"style\", \"color: red\", 4, \"ngIf\"], [\"style\", \"color: green\", 4, \"ngIf\"], [2, \"color\", \"red\"], [2, \"color\", \"green\"]],\n  template: function LogInComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LogInComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelement(2, \"br\");\n      i0.ɵɵelementStart(3, \"p\", 2);\n      i0.ɵɵtext(4, \"User Name: \");\n      i0.ɵɵelement(5, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"p\", 4);\n      i0.ɵɵtext(7, \"Password: \");\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"br\");\n      i0.ɵɵelementStart(10, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function LogInComponent_Template_button_click_10_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵtext(11, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"br\")(13, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(14, LogInComponent_p_14_Template, 2, 1, \"p\", 7);\n      i0.ɵɵtemplate(15, LogInComponent_p_15_Template, 2, 0, \"p\", 8);\n      i0.ɵɵelement(16, \"br\")(17, \"br\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.valid);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAEnE,SAASC,aAAa,QAAQ,2BAA2B;;;;;;;ICKvDC,4BAAgD;IAAAA,YAAgB;IAAAA,iBAAI;;;;IAApBA,eAAgB;IAAhBA,yCAAgB;;;;;IAChEA,6BAAgD;IAAAA,+BAAe;IAAAA,iBAAI;;;ADCrE,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;IAJ1B,iBAAY,GAAG,wFAAwF;IAKrG,IAAI,CAACC,SAAS,GAAG,IAAIP,SAAS,CAAC;MAC7BQ,QAAQ,EAAE,IAAIT,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACS,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC/EC,QAAQ,EAAE,IAAIZ,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACS,SAAS,CAAC,CAAC,CAAC,CAAC;KAC/E,EACD;MACEE,UAAU,EAAEV;KACb,CAAC;EACJ;EAEAW,KAAK;IACHC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,SAAS,CAACS,KAAK,CAAC;EACnC;EAEAC,OAAO;IACL,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACjC;;AArBWd,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV3BpB,8BAAmB;MACXA;QAAA,OAAYqB,WAAO;MAAA,EAAC;MAAoCrB,qBAAI;MAChEA,4BAAyB;MAAAA,2BAAW;MAAAA,2BAA8E;MAAAA,iBAAI;MACtHA,4BAAyB;MAAAA,0BAAU;MAAAA,2BAAkF;MAAAA,iBAAI;MAC7HA,qBAAI;MACAA,kCAA8E;MAAvCA;QAAA,OAASqB,aAAS;MAAA,EAAC;MAAoBrB,sBAAK;MAAAA,iBAAS;MAAAA,sBAAI;MAClGA,iBAAO;MAEPA,6DAAoE;MACpEA,6DAAmE;MAAAA,sBAAI;MACzEA,iBAAM;;;MATuBA,eAAuB;MAAvBA,yCAAuB;MAIxCA,eAA8B;MAA9BA,gDAA8B;MAGpCA,eAAuB;MAAvBA,4CAAuB;MACvBA,eAAqB;MAArBA,0CAAqB","names":["FormControl","FormGroup","Validators","matchpassword","i0","LogInComponent","constructor","router","loginForm","username","required","minLength","password","validators","login","console","log","value","onClick","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\matthew.earlywine\\git\\book-archive\\webapp-NG\\book-archive-ng\\src\\app\\login\\log-in.component.ts","C:\\Users\\matthew.earlywine\\git\\book-archive\\webapp-NG\\book-archive-ng\\src\\app\\login\\log-in.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { matchpassword } from './matchpassword.validator';\r\n\r\n@Component({\r\n  selector: 'ba-log-in',\r\n  templateUrl: './log-in.component.html',\r\n  styleUrls: ['./log-in.component.css'],\r\n})\r\nexport class LogInComponent {\r\n  errorMessage = \"Both User Name and Password must be present and be at least eight (8) characters long.\"\r\n  \r\n  loginForm: FormGroup;\r\n\r\n  constructor(private router: Router){\r\n    this.loginForm = new FormGroup({\r\n      username: new FormControl(null, [Validators.required, Validators.minLength(8)]),\r\n      password: new FormControl(null, [Validators.required, Validators.minLength(8)]),\r\n    },\r\n    {\r\n      validators: matchpassword\r\n    })\r\n  }\r\n\r\n  login(){\r\n    console.log(this.loginForm.value);\r\n  }\r\n\r\n  onClick(): void {\r\n    this.router.navigate(['/home']);\r\n  }\r\n}\r\n","<div class=\"belch\">\r\n  <form (ngSubmit)=\"login()\" [formGroup]='loginForm' novalidate><br>\r\n    <p name=\"userNameBanner\">User Name: <input type='text' name=\"username\" id=\"username\" formControlName='username' /></p>\r\n    <p name=\"passwordBanner\">Password: <input type='password' name=\"password\" id=\"password\" formControlName='password' /></p>\r\n<br>\r\n    <button [disabled]=\"loginForm.invalid\" (click)='onClick()' name=\"submitLogIn\">Login</button><br><br>\r\n  </form>\r\n\r\n  <p *ngIf=\"loginForm.invalid\" style=\"color: red\">{{errorMessage}}</p>\r\n  <p *ngIf=\"loginForm.valid\" style=\"color: green\">Access granted!</p><br><br>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}