/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.43.v20210629
 * Generated at: 2022-11-08 19:22:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class bookListHome_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/matthew.earlywine/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153403082000L));
    _jspx_dependants.put("file:/C:/Users/matthew.earlywine/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar", Long.valueOf(1661111506985L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("  <head>  \r\n");
      out.write("    <title>Home</title>\r\n");
      out.write("     <script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.js\"></script>\r\n");
      out.write("  </head>\r\n");
      out.write("  <body ng-app=\"myApp\" class=\"ng-cloak\">\r\n");
      out.write("      <div class=\"generic-container\" ng-controller=\"ListController as ctrl\">\r\n");
      out.write("          <div class=\"panel panel-default\">\r\n");
      out.write("              <div class=\"panel-heading\">\r\n");
      out.write("              \t<span class=\"lead\">Game Registration Form </span>\r\n");
      out.write("              \t<a class=\"floatRight\" style=\"font-size:18px\" href=\"/GameRate/home\" id=\"homeLink\">Home</a>\r\n");
      out.write("              </div>\r\n");
      out.write("              <div class=\"formcontainer\">\r\n");
      out.write("                  <form ng-submit=\"ctrl.submit()\" name=\"myForm\" class=\"form-horizontal\">\r\n");
      out.write("                      <input type=\"hidden\" ng-model=\"ctrl.book.id\" />\r\n");
      out.write("                      <div class=\"row\">\r\n");
      out.write("                          <div class=\"form-group col-md-12\">\r\n");
      out.write("                              <label class=\"col-md-2 control-lable\" for=\"file\">Title</label>\r\n");
      out.write("                              <div class=\"col-md-7\">\r\n");
      out.write("                                  <input type=\"text\" ng-model=\"ctrl.book.title\" name=\"title\" class=\"form-control input-sm\" placeholder=\"Enter the book's title\" required/>\r\n");
      out.write("                                  <div class=\"has-error\" ng-show=\"myForm.$dirty\">\r\n");
      out.write("                                      <span ng-show=\"myForm.title.$error.required\">This is a required field</span>\r\n");
      out.write("                                  </div>\r\n");
      out.write("                              </div>\r\n");
      out.write("                          </div>\r\n");
      out.write("                      </div>\r\n");
      out.write("                        \r\n");
      out.write("                      \r\n");
      out.write("                      <div class=\"row\">\r\n");
      out.write("                          <div class=\"form-group col-md-12\">\r\n");
      out.write("                              <label class=\"col-md-2 control-lable\" for=\"file\">Comment</label>\r\n");
      out.write("                              <div class=\"col-md-7\">\r\n");
      out.write("                                  <input type=\"text\" ng-model=\"ctrl.book.author\" name=\"author\" class=\"form-control input-sm\" placeholder=\"Enter your authors for the book. [This field is validation free]\"/>\r\n");
      out.write("                              </div>\r\n");
      out.write("                          </div>\r\n");
      out.write("                      </div>\r\n");
      out.write("\r\n");
      out.write("                      <div class=\"row\">\r\n");
      out.write("                          <div class=\"form-group col-md-12\">\r\n");
      out.write("                              <label class=\"col-md-2 control-lable\" for=\"file\">Rating</label>\r\n");
      out.write("                              <div class=\"col-md-7\">\r\n");
      out.write("                                  <input type=\"number\" ng-model=\"ctrl.book.genre\" name=\"genre\" class=\"form-control input-sm\" placeholder=\"Enter your genre for the book 1-5\" required min=\"1\" max=\"5\"/>\r\n");
      out.write("                                  <div class=\"has-error\" ng-show=\"myForm.$dirty\">\r\n");
      out.write("                                      <span ng-show=\"myForm.genre.$error.required\">This is a required field</span>\r\n");
      out.write("                                  </div>\r\n");
      out.write("                              </div>\r\n");
      out.write("                          </div>\r\n");
      out.write("                      </div>\r\n");
      out.write("\r\n");
      out.write("                      <div class=\"row\">\r\n");
      out.write("                          <div class=\"form-actions floatRight\">\r\n");
      out.write("                              <input type=\"submit\"  value=\"{{!ctrl.book.id ? 'Add' : 'Update'}}\" class=\"btn btn-primary btn-sm\" ng-disabled=\"myForm.$invalid\">\r\n");
      out.write("                              <button type=\"button\" ng-click=\"ctrl.reset()\" class=\"btn btn-warning btn-sm\" ng-disabled=\"myForm.$pristine\">Reset Form</button>\r\n");
      out.write("                          </div>\r\n");
      out.write("                      </div>\r\n");
      out.write("                  </form>\r\n");
      out.write("              </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"panel panel-default\">\r\n");
      out.write("                <!-- Default panel contents -->\r\n");
      out.write("              <div class=\"panel-heading\"><span class=\"lead\">List of Games </span></div>\r\n");
      out.write("              <div class=\"tablecontainer\">\r\n");
      out.write("                  <table class=\"table table-hover\">\r\n");
      out.write("                      <thead>\r\n");
      out.write("                          <tr>\r\n");
      out.write("                              <th>ID</th>\r\n");
      out.write("                              <th>Title</th>\r\n");
      out.write("                              <th>Comment</th>\r\n");
      out.write("                              <th>Rating</th>\r\n");
      out.write("                              <th width=\"20%\"></th>\r\n");
      out.write("                          </tr>\r\n");
      out.write("                      </thead>\r\n");
      out.write("                      <tbody>\r\n");
      out.write("                          <tr ng-repeat=\"book in ctrl.books\">\r\n");
      out.write("                              <td><span ng-bind=\"book.id\"></span></td>\r\n");
      out.write("                              <td><span ng-bind=\"book.title\"></span></td>\r\n");
      out.write("                              <td><span ng-bind=\"book.author\"></span></td>\r\n");
      out.write("                              <td><span ng-bind=\"book.genre\"></span></td>\r\n");
      out.write("                              <td>\r\n");
      out.write("                              <button type=\"button\" ng-click=\"ctrl.edit(book.id)\" class=\"btn btn-success custom-width\">Edit</button>\r\n");
      out.write("                              <button type=\"button\" ng-click=\"ctrl.remove(book.id)\" class=\"btn btn-danger custom-width\">Remove</button>\r\n");
      out.write("                              </td>\r\n");
      out.write("                          </tr>\r\n");
      out.write("                      </tbody>\r\n");
      out.write("                  </table>\r\n");
      out.write("              </div>\r\n");
      out.write("          </div>\r\n");
      out.write("      </div>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
